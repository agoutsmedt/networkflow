% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/intertemporal_cluster_naming.R
\name{intertemporal_cluster_naming}
\alias{intertemporal_cluster_naming}
\title{Find similar clusters across multiple temporal networks}
\usage{
intertemporal_cluster_naming(
  list_graph = NA,
  cluster_column = NA,
  ID_key = NA,
  threshold_similarity = 0.5001,
  similarity_type = c("complete, partial")
)
}
\arguments{
\item{list_graph}{A list of graph. The list of networks is expected to be ordered in a sequential order
from the oldest to the most recent network.}

\item{cluster_column}{The column with the name of the cluster.}

\item{ID_key}{The column with the unique identifier of each node.}

\item{threshold_similarity}{The threshold_similarity variable defines how sensitive the function is to giving the same name to two clusters.
A higher threshold will lead to more communities.

For example, if you have two temporal networks with two communities each. Communities A and B for the older network,
and communities A' and B' for the more recent network. A threshold of 0.51 with a "complete" similarity_type means that community A' will be given the name
A if 51\% of the nodes from A' in the more recent network originate from A in the older network, and 51\% of the node from A in the older
network becomes in A' in the more recent network.}

\item{similarity_type}{Choose a similarity type to compare the threshold to:
\itemize{
\item "complete" similarity compute the share of nodes going from a older community to a more recent community on all the nodes in both networks
\item "partial" similarity compute the share of nodes going from a older community to a more recent community only on nodes that exists in both networks
}

Complete similarity is particularly suited if the number of nodes in your networks is relatively stable over time as the threshold capture the share of all nodes
moving between clusters. Partial similarity can be particularly useful when the number of nodes in your networks increases rapidly. The interpretation of the threshold
is that it captures the share of nodes existing in both networks moving between clusters.

For example, with a complete similarity threshold of 0.51, if (1) all nodes from community A in network t-1 go into community A' in network t+1, and (2) all nodes in community A'
present in network t-1 originate from community A, but (3) the number of nodes in A' is more than twice of A because of new nodes that did not exists in t-1,
A' will never meet the threshold requirement to be named A despite a strong similarity between the two clusters.
Conceptually, this might be a desired behavior of the function because one might considered that A' is too different from A to be considered the same cluster as its composition is changed from new nodes.
In that case complete similarity is the right choice. However, if one consider that A and A' are very similar because all the nodes that exists in both networks are identified as part of the same community,
then partial treshold similarity is more desirable.

#' @examples
library(biblionetwork)
intertemporal_cluster_naming(list_of_temporal_networks,
cluster_column = "Louvain_clusters",
ID_key = "ids_nodes",
threshold_similarity = 0.51,
similarity_type = "partial")}
}
\description{
This function creates a new column "intertemporal_name" for each network in a list of temporal networks to
identify similar clusters across time. The function give the same to name two
clusters between two sequential temporal network if they match the conditions from
the user defined threshold_similarity, cluster_column and similarity_type.
}
